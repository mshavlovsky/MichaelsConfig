// Place your key bindings in this file to override the defaultsauto[]
[
    // Toggle between terminal and editor focus
    {
        "key":     "ctrl+'",
        "command": "workbench.action.terminal.focus"
    },
    {
        "key":     "ctrl+'",
        "command": "workbench.action.focusActiveEditorGroup",
        "when":    "terminalFocus"
    },

    {
        "key": "cmd+enter",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
        "key": "enter",
        "command": "-renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
        "key": "enter",
        "command": "list.select",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "alt+9",
        "command": "workbench.action.showNextWindowTab"
    },
    {
        "key": "alt+8",
        "command": "workbench.action.showPreviousWindowTab"
    },
    {
        "key": "alt+0",
        "command": "editor.action.inlineSuggest.showNext",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "alt+]",
        "command": "-editor.action.inlineSuggest.showNext",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "alt+]",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "alt+7",
        "command": "editor.action.inlineSuggest.showPrevious",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "alt+[",
        "command": "-editor.action.inlineSuggest.showPrevious",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "alt+[",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "alt+cmd+left",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "cmd+2",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "cmd+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "cmd+1",
        "command": "workbench.action.focusSideBar"
    },
    {
        "key": "cmd+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "i",
        "command": "notebook.cell.edit",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "enter",
        "command": "-notebook.cell.edit",
        "when": "notebookCellListFocused && notebookEditable && !inputFocus"
    },
    {
        "key": "u",
        "command": "undo",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "z",
        "command": "-undo",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "n",
        "command": "list.focusDown",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "j",
        "command": "-list.focusDown",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "e",
        "command": "list.focusUp",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "k",
        "command": "-list.focusUp",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "shift+n",
        "command": "notebook.cell.moveDown",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "alt+down",
        "command": "-notebook.cell.moveDown",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "shift+e",
        "command": "notebook.cell.moveUp",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "alt+up",
        "command": "-notebook.cell.moveUp",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "command": "vscode-neovim.send",
        // the key sequence to activate the binding
        "key": "ctrl+n",
        // don't activate during insert mode
        "when": "editorTextFocus",
        // the input to send to Neovim
        "args": "<C-w>j"
    },
    {
        "command": "vscode-neovim.send",
        // the key sequence to activate the binding
        "key": "ctrl+e",
        // don't activate during insert mode
        "when": "editorTextFocus",
        // the input to send to Neovim
        "args": "<C-w>k"
    },
    {
        "command": "vscode-neovim.send",
        // the key sequence to activate the binding
        "key": "ctrl+i",
        // don't activate during insert mode
        "when": "editorTextFocus",
        // the input to send to Neovim
        "args": "<C-w>l"
    },
    {
        "key": "ctrl+i",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "command": "vscode-neovim.send",
        // the key sequence to activate the binding
        "key": "ctrl+h",
        // don't activate during insert mode
        "when": "editorTextFocus",
        // the input to send to Neovim
        "args": "<C-w>h"
    },
    {
        "key": "ctrl+h",
        "command": "-deleteLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+h",
        "command": "-deleteLeft",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
    },
    {
        "key": "ctrl+h",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.recording && neovim.mode == 'insert'"
    },
    {
        "key": "ctrl+h",
        "command": "-vscode-neovim.send-cmdline",
        "when": "neovim.mode == 'cmdline_insert' || neovim.mode == 'cmdline_normal' || neovim.mode == 'cmdline_replace'"
    },
    {
        "command": "vscode-neovim.send",
        // the key sequence to activate the binding
        "key": "ctrl+u",
        // don't activate during insert mode
        "when": "editorTextFocus",
        // the input to send to Neovim
        "args": "<C-w>="
    },
    {
        "command": "vscode-neovim.send",
        // the key sequence to activate the binding
        "key": "ctrl+m",
        // don't activate during insert mode
        "when": "editorTextFocus",
        // the input to send to Neovim
        "args": "<C-w>_"
    },
    // {
        // "key": "g b",
        // "command": "workbench.action.navigateBack"
    // },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.navigateBack"
    },
    // {
    //     "key": "g d",
    //     "command": "editor.action.revealDefinition",
    //     "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    // },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
]